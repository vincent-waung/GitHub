@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section scripts{
    <script src="~/Scripts/processingajaxmsg.js"></script>
    <script src="~/Scripts/xzUtil.js"></script>}
 

<script type="text/javascript">
    var dgBooking;
    var searchForm;
    $(function () {

        var start_time = new Date();
        var end_time = new Date();
        start_time.setDate(start_time.getDate() - 7);
        $("#jrstartdate").datebox("setValue", myformatter(start_time));

        $("#jrenddate").datebox("setValue", myformatter(end_time));
        //loadCustomer();
        //获取时间
        //var beginTime=$("#txtBeginTime").datebox("getValue");
        //var endTime=$("#txtEndTime").datebox("getValue");

        // alert(nowdate.toDateString());
        //  alert(nodate.getFullYear());
        //alert(nodate.getMonth());
        //alert(nowdate.getDate());
        //$('#startdate').datebox('setValue', nowdate.getMonth() + 1 + '-' + nowdate.getDate() + '-' + nowdate.getFullYear());
        // nowdate.setDate(nowdate.getDate() + 15);

        // $('#enddate').datebox('setValue', nowdate.getMonth() + 1 + '-' + nowdate.getDate() + '-' + nowdate.getFullYear());
        searchForm = $('#searchForm');
        dgBooking = $("#dgBooking").datagrid({
            iconCls: 'icon-save',
            fit: true,
            fitColumns: false,
            rownumbers: true,
            nowrap: true, //如果为true，则在同一行中显示数据。设置为true可以提高加载性能。
            animate: false,
            border: false,
            method: 'post',
            singleSelect: true,
            loadMsg: 'Loading……',
            cache: false,
            //idField: 'id',
            //把表单元素序列化成对象
            queryParams: xz.serializeObject(searchForm),
            pagination: true,
            pageSize: 50,
            pageList: [50, 100, 150, 200, 250],
            url: '/OnlineBooking_Areas/LoadPlanQuery/GetTruckKPI',

            columns: [[
                // {
                //     field: 'Job_Rec_Date', title: 'Job Received Date', width: 120, formatter: function (value) {
                //         if (value) {
                //             return eval("new " + value.substr(1, value.length - 2)).toLocaleDateString();
                //         }
                //     }
                // },
                // { field: 'JOB_NO', title: 'Job No.', width: 150 },
                //{ field: 'Origin_port', title: 'Origin port', width: 150 },
                //{ field: 'Ship_mode', title: 'Ship mode', width: 100 },
                     {
                         field: 'Oper', title: 'POD', width: 120, align: 'center',
                         width: 100,
                         formatter: function (value, row) {
                             var html = '<a href="#" onclick=\'showPODdownloadView()\'><span class="icon-d1" style="display:inline-block;vertical-align:middle;width:16px;height:16px;">&nbsp;</span>[POD]</a>';

                             return html;
                         }
                     },
                { field: 'Consol_no', title: 'SO No.', width: 100 },
                //{ field: 'Remarks', title: 'Remarks', width: 100 },
                //{ field: 'Vendor_Name', title: 'Vendor Name', width: 200 },
                 //{ field: 'Mfr_Name1', title: 'Mfr Name1', width: 200 },
                //{ field: 'Mfr_Country', title: 'Mfr Country', width: 100 },
                { field: 'Vendor_Name', title: 'Vendor Name', width: 150 },
                { field: 'Customer_Name', title: 'Customer Name', width: 150 },
                //{ field: 'Receiving_point', title: 'Receiving point', width: 100 },
                //{ field: 'CustomerPO', title: 'Customer PO(2)', width: 120 },
                { field: 'SalesOrd_STO', title: 'HFE', width: 100 },
                { field: 'ItemNO', title: 'Item No.', width: 100 },
                //{
                //    field: 'First_Date', title: 'First Date', width: 100, formatter: function (value) {
                //        if (value) {
                //            return eval("new " + value.substr(1, value.length - 2)).toLocaleDateString();
                //        }
                //    }
                //},
                //{
                //    field: 'Cancel_Date', title: 'Cancel Date', width: 100, formatter: function (value) {
                //        if (value) {
                //            return eval("new " + value.substr(1, value.length - 2)).toLocaleDateString();
                //        }
                //    }
                //},

                //{ field: 'PurchDoc', title: 'Purch.Doc.', width: 100 },

                //{ field: 'Item', title: 'Item', width: 100 },

                //{ field: 'CustomerMaterialNumber', title: 'Cust Material No.', width: 100 },
                //{ field: 'SalesMaterial', title: 'Sales Material No.', width: 120 },
                //{ field: 'Material', title: 'Material No.', width: 100 },

                //{ field: 'Short_text', title: 'Short text(8)', width: 100 },
                //{ field: 'PO_quantity', title: 'PO quantity', width: 100 },

                { field: 'TotalCarton', title: 'Total Carton', width: 100 },



                //{ field: 'Destination', title: 'Destination', width: 100 },



                //{ field: 'CustomerDescription', title: 'Cust Description(10)', width: 100 },

                //{
                //    field: 'Deliv_date', title: 'Deliv. date', width: 100, formatter: function (value) {
                //        if (value) {
                //            return eval("new " + value.substr(1, value.length - 2)).toLocaleDateString();
                //        }
                //    }
                //},


                //{ field: 'Matl_Group', title: 'Matl Group', width: 100 },

                //{ field: 'CartonPCS', title: 'Carton PCS (4)', width: 100 },

                //{ field: 'CartonGrossWeight', title: 'Carton GrossWeight', width: 100 },
                {
                    field: 'TotalGrossWeight', title: 'Total Gross Weight', width: 120, formatter: function (value) {
                        var f_x = parseFloat(value);
                        //if (isNaN(f_x)) {
                        //    alert('function:changeTwoDecimal->parameter error');
                        //    return false;
                        //}
                        var f_x = Math.round(value * 100) / 100;
                        var s_x = f_x.toString();
                        var pos_decimal = s_x.indexOf('.');
                        if (pos_decimal < 0) {
                            pos_decimal = s_x.length;
                            s_x += '.';
                        }
                        while (s_x.length <= pos_decimal + 3) {
                            s_x += '0';
                        }
                        return s_x;

                    }

                },
                //{ field: 'CartonVolume', title: 'Carton Volume', width: 100 },
                {
                    field: 'TotalVolume', title: 'Total CBM', width: 100, formatter: function (value) {
                        var f_x = parseFloat(value);
                        //if (isNaN(f_x)) {
                        //    alert('function:changeTwoDecimal->parameter error');
                        //    return false;
                        //}
                        var f_x = Math.round(value * 100) / 100;
                        var s_x = f_x.toString();
                        var pos_decimal = s_x.indexOf('.');
                        if (pos_decimal < 0) {
                            pos_decimal = s_x.length;
                            s_x += '.';
                        }
                        while (s_x.length <= pos_decimal + 3) {
                            s_x += '0';
                        }
                        return s_x;

                    }
                },

                { field: 'Shipment_Type', title: 'Ship Type', width: 100 },
                { field: 'Cont_No', title: 'Container NO.', width: 100 },
                //{ field: 'CartonNetWeight', title: 'Carton NetWeight ', width: 100 },
                //{ field: 'TotalNetWeight', title: 'Total NetWeight ', width: 100 },
                //{ field: 'CartonWidth_L', title: 'Carton Width-L', width: 100 },
                //{ field: 'CartonDepth_W', title: 'Carton Depth-W', width: 100 },
                //{ field: 'CartonHeight', title: 'Carton Height ', width: 100 },
                //{ field: 'MainBatt', title: 'MainBatt', width: 100 },
                //{ field: 'MainBattQty', title: 'MainBattQty', width: 100 },
                //{ field: 'ShipToName', title: 'ShipTo Name', width: 100 },
                //{ field: 'ShipToCountry', title: 'Ship To Country', width: 100 },
                //{ field: 'OverallCredStat', title: 'OverallCredStat', width: 100 },
                //{ field: 'SMprofomalINV', title: 'SM profomal INV#', width: 100 },

                 //{ field: 'id', title: 'id', width: 100 },
                //{ field: 'DeliveryNo', title: 'Delivery No.', width: 100 },

               //{ field: 'Transport_mode', title: 'Transportation Mode', width: 120 },

               //{ field: 'Ship_mode', title: 'Ship mode', width: 100 },



               // { field: 'BookingNo', title: 'Booking no.', width: 100 },
               // {
               //     field: 'Booking_date', title: 'Booking date', width: 100, formatter: function (value) {
               //         if (value) {
               //             return eval("new " + value.substr(1, value.length - 2)).toLocaleDateString();
               //         }
               //     }
               // },
                //{
                //    field: 'Booking_doc_uploaded_date', title: 'Booking  doc uploaded  Date', width: 200, formatter: function (value) {
                //        if (value) {
                //            return eval("new " + value.substr(1, value.length - 2)).toLocaleDateString();
                //        }
                //    }
                //},
                //{ field: 'SO', title: 'S/O#', width: 100 },


                //{
                //    field: 'rec_so_date', title: 'S/O Received from Carrier Date', width: 200, formatter: function (value) {
                //        if (value) {
                //            return eval("new " + value.substr(1, value.length - 2)).toLocaleDateString();
                //        }
                //    }
                //},

                //  {
                //      field: 'SO_release_date', title: 'S/O Release to Factory Date', width: 180, formatter: function (value) {
                //          if (value) {
                //              return eval("new " + value.substr(1, value.length - 2)).toLocaleDateString();
                //          }
                //      }
                //  },

                //  {
                //      field: 'Cust_SI', title: 'SI Cut Off Date', width: 200, formatter: function (value) {
                //          if (value) {
                //              return eval("new " + value.substr(1, value.length - 2)).toLocaleDateString();
                //          }
                //      }
                //  },
                //{
                //    field: 'CY_open', title: 'Shipment Delivery Open Date', width: 200, formatter: function (value) {
                //        if (value) {
                //            return eval("new " + value.substr(1, value.length - 2)).toLocaleDateString();
                //        }
                //    }
                //},
                //{
                //    field: 'CY_closing', title: 'Shipment Delivery Closing Date', width: 200, formatter: function (value) {
                //        if (value) {
                //            return eval("new " + value.substr(1, value.length - 2)).toLocaleDateString();
                //        }
                //    }
                //},
                //{ field: 'Cus_Sys_INV', title: 'Cust SYS INV#', width: 100 },
                //{
                //    field: 'Close_shipping_doc_submssion_date', title: 'Close-shipping Doc Sub Date', width: 200, formatter: function (value) {
                //        if (value) {
                //            return eval("new " + value.substr(1, value.length - 2)).toLocaleDateString();
                //        }
                //    }
                //},
                //{
                //    field: 'ETD', title: 'ETD', width: 100, formatter: function (value) {
                //        if (value) {
                //            return eval("new " + value.substr(1, value.length - 2)).toLocaleDateString();
                //        }
                //    }
                //},
                //{ field: 'Vessel', title: 'Vessel Name', width: 100 },
                //{ field: 'Voyage', title: 'Voyage', width: 100 },


                //{ field: 'Loading_Port', title: 'Port of Loading', width: 100 },
                //{ field: 'Unloading_Port', title: 'Port of Discharge', width: 100 },

                    //{ field: 'Destination', title: 'Final Destination', width: 100 },
                 //{ field: 'BL', title: 'BL No.', width: 100 },
                //{
                //    field: 'Cust_SI', title: 'Carrier SI Cut', width: 100, formatter: function (value) {
                //        if (value) {
                //            return eval("new " + value.substr(1, value.length - 2)).toLocaleDateString();
                //        }
                //    }
                //},
                //{
                //    field: 'Send_SI', title: 'Finishe Send SI', width: 100, formatter: function (value) {
                //        if (value) {
                //            return eval("new " + value.substr(1, value.length - 2)).toLocaleDateString();
                //        }
                //    }
                //},
                //{
                //    field: 'Confirm_SI', title: 'Vendor SI Cut ', width: 100, formatter: function (value) {
                //        if (value) {
                //            return eval("new " + value.substr(1, value.length - 2)).toLocaleDateString();
                //        }
                //    }
                //},
                //{
                //    field: 'Payment_Date', title: 'Payment Date', width: 100, formatter: function (value) {
                //        if (value) {
                //            return eval("new " + value.substr(1, value.length - 2)).toLocaleDateString();
                //        }
                //    }
                //},



                 //{
                 //    field: 'ImportDate', title: 'Import Date', width: 100, formatter: function (value) {
                 //        if (value) {
                 //            return eval("new " + value.substr(1, value.length - 2)).toLocaleDateString();
                 //        }
                 //    }
                 //},

                //{ field: 'Cont_No', title: 'Container No.', width: 100 },
                // { field: 'Seal_No', title: 'Seal No.', width: 100 },
                //{
                //    field: 'Cont_Date', title: 'SI Submission Date', width: 100, formatter: function (value) {
                //        if (value) {
                //            return eval("new " + value.substr(1, value.length - 2)).toLocaleDateString();
                //        }
                //    }
                //},

                    {
                        field: 'Leave_factory_time', title: 'Actual Departure Date from Factory', width: 220, formatter: function (value) {

                            if (value) {
                                if (eval("new " + value.substr(1, value.length - 2)).toLocaleDateString() == '1/1/1') {
                                    return '';
                                } else {

                                    return eval("new " + value.substr(1, value.length - 2)).toLocaleDateString();


                                }
                            }
                        }
                    },
                //CY 交码头时间，  CFS 交仓时间
                  {
                      field: 'Ship_Date', title: 'Actual Arrival Date(CFS)', width: 180, formatter: function (value) {
                          if (value) {
                              return eval("new " + value.substr(1, value.length - 2)).toLocaleDateString();
                          }
                      }
                  },

               {
                   field: 'Cont_Date', title: 'Actual Arrival Date in Terminals(CY)', width: 220, formatter: function (value) {

                       if (value) {
                           if (eval("new " + value.substr(1, value.length - 2)).toLocaleDateString() == '1/1/1') {
                               return '';
                           } else {

                               return eval("new " + value.substr(1, value.length - 2)).toLocaleDateString();


                           }
                       }
                   }
               } 


  //{ field: 'Exception', title: 'Remark', width: 120 },

  //  {
  //      field: 'FCR_Date', title: 'FCR/OB/L submission date', width: 100, formatter: function (value) {
  //          if (value) {
  //              return eval("new " + value.substr(1, value.length - 2)).toLocaleDateString();
  //          }
  //      }
  //  },


  //{ field: 'Courier_tracking_no', title: 'Courier tracking no.', width: 120 }




            ]],

            onRowContextMenu: function (e, rowIndex, rowData) {
                //e.preventDefault();
                //$(this).datagrid('unselectAll');
                //$(this).datagrid('selectRow', rowIndex);
                //$('#menu').menu('show', {
                //    left: e.pageX,
                //    top: e.pageY
                //});
            },

            onLoadSuccess: function (data) {
                var rows = $("#dgBooking").datagrid('getRows').length;

                if (rows >= 1) {
                    $('#dgBooking').datagrid('selectRow', 0);

                }
            }

        });
    });


    //function loadCustomer() {
    //    $.post("/OnlineBooking_Areas/LoadPlanQuery/GetCustomerList", null, function (data, textStatus) {

    //        if (textStatus = "success") {
    //            $("#Customer").combobox({});
    //            $("#Customer").combobox({
    //                data: data.Data,
    //                valueField: 'cust_name',
    //                textField: 'cust_name'
    //            });


    //        } else {

    //            alert('get customerlist false');
    //        }

    //    })
    //}

    function changeTwoDecimal_f(x) {

        var f_x = parseFloat(x);
        //if (isNaN(f_x)) {
        //    alert('function:changeTwoDecimal->parameter error');
        //    return false;
        //}
        var f_x = Math.round(x * 100) / 100;
        var s_x = f_x.toString();
        var pos_decimal = s_x.indexOf('.');
        if (pos_decimal < 0) {
            pos_decimal = s_x.length;
            s_x += '.';
        }
        while (s_x.length <= pos_decimal + 2) {
            s_x += '0';
        }
        return s_x;
    }

    function myformatter(date) {
        var y = date.getFullYear();
        var m = date.getMonth() + 1;
        var d = date.getDate();
        return y + '-' + (m < 10 ? ('0' + m) : m) + '-' + (d < 10 ? ('0' + d) : d);
    }

    /*过滤角色信息*/
    function searchBooking() {
        //将form元素转换为数据对象
        // var aa = xz.serializeObject(searchForm);


        //数组访问方式 jsonData[0].name
        //对象访问方式??aa.startdate

        //datagrid load 方法参数是一个数据对象
        //$.post("/OnlineBooking_Areas/LoadPlanQuery/CheckDifLogin", null, function (data, textStatus) {

        //    if (textStatus = "success") {
        //        if (data.Statu == 6) {

        //            //window.location.href(data.BackUrl);
        //            //window.location = data.BackUrl;
        //            $.alertMsg(data.Msg, '操作提示', null);
        //            top.location.href = data.BackUrl;


        //        } else {

                    dgBooking.datagrid('load', xz.serializeObject(searchForm));
        //        }

        //    }

        //})

        //



    }


    function Export() {


        //var formParam = {
        //    url: '/Login/LoginIn',
        //    success: dealWithLogin
        //}
        ///*把表单参数对象和表单元素结合起来*/
        //loginInputForm = $('#loginInputForm').form(formParam);

        $.post("/OnlineBooking_Areas/LoadPlanQuery/CheckDifLogin", null, function (data, textStatus) {

            if (textStatus = "success") {
                if (data.Statu == 6) {

                    //window.location.href(data.BackUrl);
                    //window.location = data.BackUrl;
                    $.alertMsg(data.Msg, '操作提示', null);
                    top.location.href = data.BackUrl;


                } else {

                    document.getElementById("searchForm").submit();
                }

            }

        })

    }


    function showPODdownloadView() {
        $.validateUrl('/OnlineBooking_Areas/LoadPlanQuery/TruckingPODDownload', showPODdownload, xz.dealWith, 'Get');
    }

    function showPODdownload() {

        var node2 = dgBooking.datagrid('getSelected');
        if (node2) {
            var pAddscan = xz.dialog({
                title: 'POD Download',
                width: 400,
                height: 300,
                cache: false,
                queryParams: {
                    //uID: node.b_key, RegID: node.RegDID
                },
                iconCls: 'icon-edit',

                href: '/OnlineBooking_Areas/LoadPlanQuery/TruckingPODDownload',
                buttons: [

                {
                    text: '关闭',
                    iconCls: 'icon-cancel',
                    handler: function () {
                        // pAddscan.dialog('close');

                        //var fm = pAddscan.find('form');
                        //var pScan_CTN = ff.find("#divScan_CTN").html();

                        //updateSelectedRowScanNumber(node2, pScan_CTN );

                        pAddscan.dialog('destroy');//销毁
                    }

                }

                ],
                onLoad: function () {
                    var ff = pAddscan.find('form');
                    var pdgPod = ff.find("#dgPod");
                    var pConsol = ff.find("#divConsol");
                    var parambarcode = { STO: node2.SalesOrd_STO, Item: node2.ItemNO, Consol: node2.Consol_no };
                    var optionsbarcode = pdgPod.datagrid('options');

                    pConsol.html(node2.Consol_no);
                    optionsbarcode.url = '/OnlineBooking_Areas/LoadPlanQuery/GetTKBooking2';
                    optionsbarcode.queryParams = parambarcode;
                    pdgPod.datagrid(optionsbarcode);

                    //var ptxtBarcode = ff.find("#txtBarcode");
                    //ptxtBarcode.focus();
                },

                onClose: function () {

                    pAddscan.dialog('destroy');//销毁


                }

            });
        }

    }
</script>






<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>TruckingKPIIndex</title>
</head>
<body class="easyui-layout" data-options="fit:true">
    <!--条件检索-->
    <div data-options="region:'north',title:'Filter Conditions',split:true,border:false,collapsed:false" style="height:110px;overflow:hidden;">
        <form id="searchForm" >
            <div id="condition" class="container_12" style="position:relative; border:0px solid #880000">

                <div class="clear"></div>
                <div class="grid_1 lbl">Purch.Doc</div>
                <div class="grid_2 val"> <input class="easyui-textbox" id="Purch_Doc" name="Purch_Doc"></div>



                @*<div class="grid_1 lbl">Vendor name</div>
                    <div class="grid_2 val"> <input class="easyui-textbox" id="Vendor_Name" name="Vendor_Name" value=""></div>
                    <div class="clear"></div>

                    <div class="grid_1 lbl"> Customer name</div>
                    <div class="grid_2 val"> <input class="easyui-textbox" id="Customer_name" name="Customer_name"></div>*@


                <div class="grid_1 lbl">Item.</div>
                <div class="grid_2 val"> <input class="easyui-textbox" id="Item " name="Item"></div>
                <div class="clear"></div>

                <div class="grid_3 val"> Date Type:<input class="easyui-combobox" id="DateType" name="DateType" data-options="valueField: 'value',textField: 'label',data: [{label: 'Pickup Date',value: 'Pickup Date',selected:true}]"></div>

                <div class="grid_2 val"> <input type="checkbox" name="POD" id="POD">POD</div>
                <div class="clear"></div>
                <div class="grid_2 val">From<input id="jrstartdate" name="jrstartdate" value="" class="easyui-datebox" style="width:120px"> </div>

                <div class="grid_2 val">To<input id="jrenddate" name="jrenddate" value="" class="easyui-datebox" style="width:120px"> </div>

                <div class="grid_1 ">
                    <a href="javascript:void(0);" class="easyui-linkbutton" data-options="iconCls:'icon-search'" onclick="searchBooking();">Search</a>
                </div>
                <div class="grid_1 ">
                    <a href="javascript:void(0);" class="easyui-linkbutton" data-options="iconCls:'icon-export'" onclick="Export();">Export</a>
                </div>
                <div class="clear"></div>
            </div>
        </form>
    </div>
    <!--订单信息-->
    <div></div>
    <div data-options="region:'center',border:false" style="overflow:hidden;">
        <table id="dgBooking"></table>
    </div>
</body>
</html>
